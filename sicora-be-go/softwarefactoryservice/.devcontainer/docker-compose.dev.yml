services:
  # PostgreSQL Database for Development
  postgres:
    image: postgres:15-alpine
    container_name: softwarefactory-dev-db
    environment:
      POSTGRES_DB: sicora_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dev_postgres_password
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    ports:
      - '5433:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ../../../sicora-be-python/database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - softwarefactory-dev-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d sicora_db']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for Development
  redis:
    image: redis:7-alpine
    container_name: softwarefactory-dev-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_dev_data:/data
    networks:
      - softwarefactory-dev-network
    command: redis-server --appendonly yes --requirepass dev_redis_password
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Migration Service (Python/Alembic)
  migration-service:
    build:
      context: ../../../sicora-be-python/softwarefactoryservice
      dockerfile: Dockerfile.dev
    container_name: softwarefactory-migrations
    environment:
      DATABASE_URL: 'postgresql://softwarefactoryservice_user:dev_password@postgres:5432/sicora_db'
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: sicora_db
      POSTGRES_USER: softwarefactoryservice_user
      POSTGRES_PASSWORD: dev_password
    volumes:
      - ../../../sicora-be-python/softwarefactoryservice:/app
    networks:
      - softwarefactory-dev-network
    depends_on:
      postgres:
        condition: service_healthy
    command:
      ['sh', '-c', 'sleep 10 && make migrate && make apply-user-story-indexes']
    restart: 'no'

  # SoftwareFactory Service (Go)
  softwarefactory-service:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: softwarefactory-dev-api
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: sicora_db
      DB_USER: softwarefactoryservice_user
      DB_PASSWORD: dev_password
      DB_SCHEMA: softwarefactoryservice_schema
      DATABASE_URL: 'postgresql://softwarefactoryservice_user:dev_password@postgres:5432/sicora_db?sslmode=disable&search_path=softwarefactoryservice_schema'

      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: dev_redis_password
      REDIS_URL: 'redis://:dev_redis_password@redis:6379'

      # Service Configuration
      GO_ENV: development
      GIN_MODE: debug
      SERVER_PORT: 8080
      SERVER_HOST: 0.0.0.0

      # Security
      JWT_SECRET: dev_jwt_secret_key_for_development_only_change_in_production
      CORS_ORIGINS: 'http://localhost:3000,http://localhost:8000,http://localhost:5173'

      # Logging
      LOG_LEVEL: debug
      LOG_FORMAT: json
    ports:
      - '8080:8080'
      - '2345:2345' # Delve debugger port
    volumes:
      - ..:/workspace:cached
      - go_mod_cache:/go/pkg/mod
      - go_build_cache:/root/.cache/go-build
    networks:
      - softwarefactory-dev-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migration-service:
        condition: service_completed_successfully
    restart: unless-stopped
    # Enable development mode with hot reload
    command: ['air', '-c', '.air.toml']
    working_dir: /workspace

  # PgAdmin for Database Management (Development Only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: softwarefactory-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@softwarefactory.dev
      PGADMIN_DEFAULT_PASSWORD: dev_pgadmin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - '5050:80'
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    networks:
      - softwarefactory-dev-network
    depends_on:
      - postgres
    restart: unless-stopped
    profiles:
      - debug

volumes:
  postgres_dev_data:
    name: softwarefactory_postgres_dev_data
  redis_dev_data:
    name: softwarefactory_redis_dev_data
  pgadmin_dev_data:
    name: softwarefactory_pgadmin_dev_data
  go_mod_cache:
    name: softwarefactory_go_mod_cache
  go_build_cache:
    name: softwarefactory_go_build_cache

networks:
  softwarefactory-dev-network:
    name: softwarefactory-dev-network
    driver: bridge

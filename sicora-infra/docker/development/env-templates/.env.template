# PostgreSQL Admin Configuration (para el servicio 'postgres' en docker-compose)
# Estas son las credenciales del superusuario de PostgreSQL para el entorno de desarrollo local.
# El script de inicialización de la base de datos (01_init_db_users_schemas.sql)
# asume que la base de datos 'sicora_db' será creada por este usuario.
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your_local_postgres_password # ¡CAMBIA ESTO EN TU .env LOCAL!
POSTGRES_DB=sicora_db

# Variables de entorno para los microservicios
# Estas variables serán usadas por cada servicio para construir su DATABASE_URL
# y para saber en qué esquema de base de datos deben operar.
# Las contraseñas aquí deben coincidir con las usadas en el script 01_init_db_users_schemas.sql

# UserService
USERSERVICE_DB_USER=userservice_user
USERSERVICE_DB_PASSWORD=userservice_password_placeholder # CAMBIA ESTO EN TU .env LOCAL SI QUIERES ALGO DIFERENTE AL SCRIPT SQL
USERSERVICE_DB_SCHEMA=userservice_schema

# ScheduleService
SCHEDULESERVICE_DB_USER=scheduleservice_user
SCHEDULESERVICE_DB_PASSWORD=scheduleservice_password_placeholder # CAMBIA ESTO EN TU .env LOCAL
SCHEDULESERVICE_DB_SCHEMA=scheduleservice_schema

# AttendanceService
ATTENDANCESERVICE_DB_USER=attendanceservice_user
ATTENDANCESERVICE_DB_PASSWORD=attendanceservice_password_placeholder # CAMBIA ESTO EN TU .env LOCAL
ATTENDANCESERVICE_DB_SCHEMA=attendanceservice_schema

# EvalinService
EVALINSERVICE_DB_USER=evalinservice_user
EVALINSERVICE_DB_PASSWORD=evalinservice_password_placeholder # CAMBIA ESTO EN TU .env LOCAL
EVALINSERVICE_DB_SCHEMA=evalinservice_schema

# KBService
KBSERVICE_DB_USER=kbservice_user
KBSERVICE_DB_PASSWORD=kbservice_password_placeholder # CAMBIA ESTO EN TU .env LOCAL
KBSERVICE_DB_SCHEMA=kbservice_schema

# AIService
AISERVICE_DB_USER=aiservice_user
AISERVICE_DB_PASSWORD=aiservice_password_placeholder # CAMBIA ESTO EN TU .env LOCAL
AISERVICE_DB_SCHEMA=aiservice_schema

# APIGateway - No necesita credenciales de BD directamente, pero podría tener otras variables
# Ejemplo:
# APIGATEWAY_PORT=8000

# Secret Key para JWT y otras funciones de seguridad (compartida o por servicio)
# Es crucial que esta sea una cadena larga, aleatoria y secreta en producción.
# Para desarrollo, puedes usar un valor simple, pero cámbialo en tu .env local.
SECRET_KEY=your_super_secret_and_long_random_string_for_dev_change_me

# Otras configuraciones globales
# Ejemplo:
# LOG_LEVEL=INFO
# PYTHONUNBUFFERED=1 # Útil para que los logs de Python aparezcan inmediatamente en Docker
# PYTHONPATH=/app # Ya se suele definir en los Dockerfile o docker-compose

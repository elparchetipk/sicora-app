[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sicora-backend-python"
version = "1.0.0"
description = "SICORA Backend Python Stack - Microservicios FastAPI"
authors = [
    {name = "EPTI Dev Team", email = "dev@epti.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13,<3.14"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]
keywords = ["fastapi", "microservices", "api", "sicora", "education"]

[project.urls]
Homepage = "https://github.com/epti-dev/sicora-be-python"
Documentation = "https://github.com/epti-dev/sicora-be-python#readme"
Repository = "https://github.com/epti-dev/sicora-be-python.git"
Issues = "https://github.com/epti-dev/sicora-be-python/issues"

[tool.black]
line-length = 120
target-version = ["py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.venv
  | venv
  | \.mypy_cache
  | \.pytest_cache
  | __pycache__
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 120
py_version = 313
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "venv/",
    ".venv/",
    "migrations/",
    "__pycache__/",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "tests",
    "*/tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.flake8]
max-line-length = 120
ignore = ["E501", "W503", "E203", "E231", "E402", "F401", "W292", "E266"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "*.egg-info",
    "build",
    "dist",
    "migrations"
]
disable-noqa = true

[tool.coverage.run]
source = ["."]
omit = [
    "*/venv/*",
    "*/.venv/*",
    "*/migrations/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/scripts/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
